<?php

use Drupal\guzzlerestgenerator\Http\GuzzleDrupalHttp;

/** 
 * Function to retrieve REST fields and perform Guzzle HTTP REST request 
 * and return output JSON.
 * 
 * @param Request Endpoint URL : External REST Endpoint URL to perform HTTP request
 * @param Request Method : GET, POST (Future releases: PUT, DELETE and PATCH)
 * @param Raw Headers: Application Header Key/Value pairs as a paragraph like "accept: application/json"
 * @param Payload Data: Key/Value payload data sent for POST (Future releases: PUT, PATCH)
 * @return JSON output from the endpoint request
 **/

function guzzlerestgenerator_preprocess_node__guzzle_rest(&$variables){
 
  // Retrieve node from variables
  $node = $variables['elements']['#node'];
  if($node->getType() == 'guzzle_rest'){
    // Retrieve node fields to perform REST request
    $endpoint_url = $node->get('field_guzzle_endpoint_url')->uri;
    $request_method = $node->get('field_guzzle_request_method')->value;
    $raw_headers = $node->get('field_guzzle_raw_headers')->value;
    $payload_data = $node->get('field_guzzle_data_payload')->value;

    // Perform GuzzleDrupalHttp request
    $check = new GuzzleDrupalHttp();
    // Function call to retrieve cities
    $response = $check->performRequest($endpoint_url,$request_method,$raw_headers,$payload_data);
    $contents = (string) $response->getBody();
    if($response->getStatusCode() == '200'){
      if($contents != ''){
        //check for permission here
        print_r($contents);
      }else{
        print_r('200 '.$response->getReasonPhrase());
      }
    }
    else{
      print_r($contents);
      echo '</br>Response Status Code: ';
      print_r($response->getStatusCode());
      echo '</br>Reason Phrase: ';
      print_r($response->getReasonPhrase());
    }
    die();
  }
}